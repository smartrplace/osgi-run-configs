# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

#
# Framework config properties.
#

# There is no intended relationship
# between boot delegation and system packages. Boot delegation is for
# making class path packages available to bundles without requiring them
# to have Import-Package declarations for those packages. System packages
# is for making class path packages available to bundles while requiring
# them to have Import-Package declarations for those packages. 

# To override the packages the framework exports by default from the
# class path, set this variable.
#org.osgi.framework.system.packages=

# To append packages to the default set of exported system packages,
# set this value.
# Except for javax.annotation, these packages are defined by class path extension jars in folder ext
org.osgi.framework.system.packages.extra=javax.annotation,org.zwave4j,org.usb4java,jssc,gnu.io

# The following property makes specified packages from the class path
# available to all bundles. You should avoid using this property.

org.osgi.framework.bootdelegation=

# Felix tries to guess when to implicitly boot delegate in certain
# situations to ease integration without outside code. This feature
# is enabled by default, uncomment the following line to disable it.
#felix.bootdelegation.implicit=false

# The following property explicitly specifies the location of the bundle
# cache, which defaults to "felix-cache" in the current working directory.
# If this value is not absolute, then the felix.cache.rootdir controls
# how the absolute location is calculated. (See next property)
org.osgi.framework.storage=./data/osgi-storage

# The following property is used to convert a relative bundle cache
# location into an absolute one by specifying the root to prepend to
# the relative cache path. The default for this property is the
# current working directory.
#felix.cache.rootdir=${user.dir}

# The following property controls whether the bundle cache is flushed
# the first time the framework is initialized. Possible values are
# "none" and "onFirstInit"; the default is "none".
# org.osgi.framework.storage.clean=onFirstInit

# The following property determines which actions are performed when
# processing the auto-deploy directory. It is a comma-delimited list of
# the following values: 'install', 'start', 'update', and 'uninstall'.
# An undefined or blank value is equivalent to disabling auto-deploy
# processing.
# In order to control the start order effectively we relinquish usage of
# deploy.dir and deploy.action. Each bundle is installed/started explicitly.
felix.auto.deploy.action=install,start

# The following property specifies the directory to use as the bundle
# auto-deploy directory; the default is 'bundle' in the working directory.
# not working
#felix.auto.deploy.dir=bundle

felix.log.level=1
ds.loglevel=4

# Note that felix.auto.start.X and felix.auto.install.X are evaluated
# as java properties and it doesn't make sense to set them more than
# one time with the same level(X).

# The following property is a space-delimited list of bundle URLs
# to install when the framework starts. The ending numerical component
# is the target start level. Any number of these properties may be
# specified for different start levels.
#felix.auto.install.1=

# The following property is a space-delimited list of bundle URLs
# to install and start when the framework starts. The ending numerical
# component is the target start level. Any number of these properties
# may be specified for different start levels.

#felix.auto.start.1=file:./felix/org.apache.felix.framework.security-2.6.0.jar

# Sets the initial start level of the framework upon startup.
org.osgi.framework.startlevel.beginning=4

# Sets the start level of newly installed bundles. 
felix.startlevel.bundle=4

# Felix installs a stream and content handler factories by default,
# uncomment the following line to not install them.
#felix.service.urlhandlers=false

# The launcher registers a shutdown hook to cleanly stop the framework
# by default, uncomment the following line to disable it.
#felix.shutdown.hook=false

#
# Bundle config properties.
#
felix.log.level=info
# 1: error, 2: warning, 3: info, 4: debug
ds.loglevel=2
org.osgi.service.http.port=8080
org.osgi.service.http.port.secure=8443
org.osgi.service.http.secure.enabled=true
# TODO
obr.repository.url=http://felix.apache.org/obr/releases.xml
org.apache.felix.http.debug=true
org.apache.felix.https.enable=true
org.apache.felix.https.keystore=config/jetty.pkcs12
org.apache.felix.https.keystore.password=devkey
org.apache.felix.https.keystore.key.password=devkey
org.apache.felix.https.nio=true
org.apache.felix.http.session.timeout=0
#org.apache.felix.https.jetty.protocols.excluded=SSLv3

#Enables or disables bundle cache locking, which is used to prevent concurrent access to the bundle cache. This is enabled by default, but on older/smaller JVMs file channel locking is not available; set this property to false to disable it.
#felix.cache.locking=false

# To be able to multiply install bundles with the same asymbolic name and version
org.osgi.framework.bsnversion=multiple

org.smartrplace.upnp.provider.gateway=Smartrplace Box
org.smartrplace.upnp.provider.startpage=/org/smartrplace/slotsdb/visualisation/index.html
org.eclipse.jetty.servlet.SessionCookie=JSESSIONID_OSGI

